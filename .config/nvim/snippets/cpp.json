{
  "boilerplate": {
    "prefix": ["bp", "st"],
    "body": [
        "#include <iostream>",
        "using namespace std;",
        "",
        "int main(int argc, char *argv[]) {",
        "    ios_base::sync_with_stdio(false);",
        "    cin.tie(NULL);",
        "    $1",
        "",
        "    return 0;",
        "}"
    ],
    "description": "Boilerâ€‘Plate for C++ code.",
    "scope": "c,cpp"
  },
  "cp-boilerplate": {
    "prefix": ["cp"],
    "body": [
        "#include <bits/stdc++.h>",
        "using namespace std;",
        "",
        "#define debug(x) cout << #x << \" is \" << x << endl;",
        "#define rep(i,n) for(ll i=0; i<ll(n); i++)",
        "#define yes cout << \"YES\" << '\\n'",
        "#define no cout << \"NO\" << '\\n'",
        "#define alice cout << \"Alice\" << '\\n'",
        "#define bob cout << \"Bob\" << '\\n'",
        "#define all(x) x.begin(), x.end()",
        "#define rall(x) x.rbegin(), x.rend()",
        "#define ump unordered_map",
        "#define mod 1000000007",
        "#define en '\\n'",
        "",
        "typedef int64_t ll;",
        "typedef pair<int, int> pii;",
        "typedef pair<ll, ll> pll;",
        "",
        "void solve() {",
        "    $1",
        "}",
        "",
        "int main() {",
        "    ios_base::sync_with_stdio(false);",
        "    cin.tie(NULL);",
        "",
        "    int t = 1;",
        "    cin >> t;",
        "    while(t--) {",
        "        solve();",
        "    }",
        "    return 0;",
        "}"
    ],
    "description": "Boilerplate for competitive programming in C++ with debugging utilities.",
    "scope": "cpp"
  }
}

